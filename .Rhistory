library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
city_temperature <- read_csv("C:/Users/twade/Desktop/Housing Project/city_temperature.csv")
View(city_temperature)
summary(city_temperature)
c1 <- city_temperature
max(c1$Year)
max(c1$Month)
min(c1$Year)
table(c1$Year)
us <- c1[c1$Country == 'United States']
us <- c1[c1$Country == 'United States',]
table(c1$Country)
us <- c1[c1$Country == 'US',]
summary(us)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
distinct(us$City)
unique(us$City)
count(unique(us$City))
summary(unique(us$City))
desc(us$City)
describe(us$City)
count(unique(us$City)) ## this didn't work either
us %>%
group_by(City)%>%
summarise(
count = n()
)
View(us)
dim(unique(us$City))
24*60
View(c1)
## The problem they give is this is the average temp on that given day.  We can take an average of averages......
### That might be the only way to look at it.  Not sure how many times they took the temp.
##We could just assume once a minute
## there are 1440 minutes in a day.
## What we need to do then is just multiple the temp by 1440 and that will give us the sum of all the temperatures for the day.
us$sum_temp <- us$AvgTemperature*1440
View(us)
## We will need to sum up all the temperatures, by the day and divide them by days*minutes to get a more complete average.
us %>%
group_by(City)%>%
avg_temp = mean(AvgTemperature)
## We will need to sum up all the temperatures, by the day and divide them by days*minutes to get a more complete average.
us %>%
group_by(City)%>%
avg_temp = mean(us$AvgTemperature)
## We will need to sum up all the temperatures, by the day and divide them by days*minutes to get a more complete average.
us %>%
group_by(City)%>%
summarise(
avg_temp = mean(us$AvgTemperature)
)
## We will need to sum up all the temperatures, by the day and divide them by days*minutes to get a more complete average.
us2 <- us %>%
group_by(City)%>%
summarise(
avg_temp = mean(us$AvgTemperature)
)
plot(us2)
?plot
plot(us2$City, us2$avg_temp)
summary(us2)
barplot(us2$City, us2$avg_temp)
table(us$AvgTemperature)
## We will need to sum up all the temperatures, by the day and divide them by days*minutes to get a more complete average.
us2 <- us %>%
group_by(City)%>%
summarise(
avg_temp = mean(AvgTemperature)
)
plot(us2)
plot(us2$City, us2$avg_temp)
barplot(us2$City, us2$avg_temp)
table(us$AvgTemperature)
table(us2$avg_temp)
?barplot
barplot(us2$avg_temp)
barplot(us2)
barplot(us2, names.arg = us2$City)
barplot(us2$avg_temp, names.arg = us2$City)
barplot(us2$avg_temp, names.arg = us2$City, las = 2)
us3 <- us2[us2$avg_temp <80 || us2$avg_temp > 69]
us3 <- us2[us2$avg_temp <80 || us2$avg_temp > 69,]
us3 <- us2[us2$avg_temp <80 | us2$avg_temp > 69,]
us2[us2$avg_temp < 80 | us2$avg_temp > 69,]
us3 <- us2[us2$avg_temp < 80 &us2$avg_temp > 69,]
View(us3)
library(dplyr)
us4 <- us9%>%
mutate(category = case_when(Month == 6 | Month == 7 | Month == 8 ~'Summer'))
us4 <- us%>%
mutate(category = case_when(Month == 6 | Month == 7 | Month == 8 ~'Summer'))
View(us4)
us4 <- us%>%
mutate(seasons= case_when(Month == 6 | Month == 7 | Month == 8 ~'Summer',
Month == 9 | Month == 10 | Month == 11 ~ 'Fall',
Month == 12 | Month == 1 | Month == 2 ~ 'Winter,
TRUE ~ 'Spring''))
TRUE ~ "Spring"))
mutate(seasons= case_when(Month == 6 | Month == 7 | Month == 8 ~'Summer',
fdafdks;afkld
us4 <- us%>%
mutate(seasons= case_when(Month == 6 | Month == 7 | Month == 8 ~'Summer',
fjdksla;fdklsa
library(dplyr)
us4 <- us%>%
fdsafjskl;
us4 <- us%>%
mutate(seasons= case_when(Month == 6 | Month == 7 | Month == 8 ~'Summer',
Month == 9 | Month == 10 | Month == 11 ~ 'Fall',
Month == 12 | Month == 1 | Month == 2 ~ 'Winter,
TRUE ~ "Spring"))
fdjskal;fdsla
fd
us4 <- us%>%
mutate(seasons = case_when(Month == 6 | Month == 7 | Month == 8 ~'Summer',
Month == 9 | Month == 10 | Month == 11 ~ 'Fall',
Month == 12 | Month == 1 | Month == 2 ~ 'Winter',
TRUE ~ "Spring"))
View(us4)
View(us4)
us5 <- us4%>%
group_by(City, seasons)%>%
summarise(avg_temp = mean(AvgTemperature))
Vidw(us5)
View(us5)
## cities that are within the range.
top_20_cities_first <- us5[(us5$avg_temp < 80 && us5$seasons == 'Summer') && (us5$avg_temp > 40 && us5$seasons = 'Winter'),]
## cities that are within the range.
top_20_cities_first <- us5[(us5$avg_temp < 80 && us5$seasons == 'Summer') || (us5$avg_temp > 40 && us5$seasons = 'Winter'),]
## cities that are within the range.
top_20_cities_first <- us5[(us5$avg_temp < 80 && us5$seasons == 'Summer') || (us5$avg_temp > 40 && us5$seasons == 'Winter'),]
barplot(us5$avg_temp, names.arg = us5$City, las = 2)
View(us5)  ## Nothing above 80 or 85 and nothing below 40 30
## cities that are within the range.
top_20_cities_first <- us5[(us5$avg_temp < 80 & us5$seasons == 'Summer') | (us5$avg_temp > 40 & us5$seasons == 'Winter'),]
View(top_20_cities_first)
top_20_cities_second <- top_20_cities_first%>%
mutate(number_times_show = nrow(Cities))
View(top_20_cities_first)
top_20_cities_second <- top_20_cities_first%>%
mutate(number_times_show = nrow(City))
View(top_20_cities_second)
top_20_cities_second <- top_20_cities_first%>%
group_by(City)%>%
mutate(number_times_show = nrow())
top_20_cities_second <- top_20_cities_first%>%
group_by(City)%>%
summarise(number_times_show = n())
View(top_20_cities_second)
top_20_cities_second <- top_20_cities_first%>%
mutate(count_of_stuff = count(City, order_by = seasons))
top_20_cities_second <- top_20_cities_first%>%
group_by(City)%>%
summarise(number_times_show = n())
View(top_20_cities_second)
top_20_cities_third <- top_20_cities_second[top_20_cities_second$number_times_show > 1,]
View(top_20_cities_third)
top_20_cities_5th <- top_20_cities_third%>%
inner_join(us2$City == top_20_cities_third$City)
top_20_cities_5th <- top_20_cities_third%>%
inner_join(us2$City, top_20_cities_third$City)
top_20_cities_5th <- top_20_cities_third%>%
inner_join(us2$City, top_20_cities_third$City)
library(dplyr)
top_20_cities_5th <- top_20_cities_third%>%
inner_join(us2$City, top_20_cities_third$City)
top_20_cities_5th <- top_20_cities_third%>%
inner_join(us2, top_20_cities_third, by = "City")
View(top_20_cities_5th)
View(top_20_cities_third)
top_20_cities_5th <- top_20_cities_third%>%
inner_join(us, top_20_cities_third, by = "City")
View(top_20_cities_5th)
View(us2)
View(top_20_cities_second)
View(top_20_cities_third)
us6 <- us4%>%
group_by(City, State, seasons)%>%
summarise(avg_temp = mean(AvgTemperature))
View(us6)
View(us4)
View(c1)
summary(c1)
View(top_20_cities_5th)
library(readr)
uscities <- read_csv("uscities.csv")
View(uscities)
us_cities1 <- uscities
View(us_cities1)
stats_cities <- top_20_cities_second%>%
inner_join(us_cities1, us, by = "City")
library(dply)
library(dplyr)
stats_cities <- top_20_cities_second%>%
inner_join(us_cities1, us, by = "City")
stats_cities <- top_20_cities_second%>%
inner_join(us, us_cities1, by = "City")
View(stats_cities)
stats_cities <- Null
remove(stats_cities)
?merg
?merge
cities_states <- merge(us,us_cities1, by.x = 'City', by.y = 'City', all = TRUE)
cities_states <- merge(us,us_cities1, all = TRUE)
cities_states <- merge(us,us_cities1,by = 'City', all = TRUE)
cities_states <- merge(us,us_cities1,by.x = us$City, by.y=us_cities1$city all = TRUE)
View(us_cities1)
cities_states <- merge(us,us_cities1,by.x = 'City', by.y='city', all = TRUE)
cities_states <- merge(us,us_cities1,by.x = 'City', by.y='city')
View(cities_states)
cities_states$city_ascii <- Null
cities_states$city_ascii <- NULL
cities_states$state_id <- NULL
cities_states$county_fips <- NULL
cities_states$ranking <- NULL
cities_states$id <- NULL
cities_states$incorporated <- NULL
cities_states$military <- NULL
cities_states$source <- NULL
View(cities_states)
cities_states$State <- cities_states$state_name
cities_states$state_name <- NULL
View(cities_states)
View(cities_states)
library(dplyr)
cities_states <-cities_states%>%
group_by(City)%>%
top_n(1,Rank)
cities_states <-cities_states%>%
group_by(City)%>%
top_n(1,population)
View(cities_states)
